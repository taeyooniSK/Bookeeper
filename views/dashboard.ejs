<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js"></script>
    <link rel="stylesheet" href="/css/dashboard.css">
    <title>Bookeeper</title>
</head>
<body>

<% include ./partials/messages %>


<div class="menu__wrapper container mb-5">
    <h1 class="mt-4">Dash Board</h1>
    <p class="lead mb-3">Welcome <%= name %></p>
    <div class="menu__btns--container"> 
        <a href="/" class="btn btn-primary">Home</a>
        <a href="/search" class="btn btn-success">Search</a>
        <a href="/purchase" class="btn btn-secondary">Purchase</a>
        <a href="/sales" class="btn btn-secondary">Sales</a>
        <a href="/logout" class="btn btn-danger">Logout</a>
    </div>
</div>
<div class="content__wrapper container">
  <h2>Purchase</h2>
  <div class="container text-center">
      <div class="row">
          <div class="col">
            <small>Today's lowest price of 1 unit you purchased:</small>
            <p><strong><%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[1][0].min_price) %></strong></p>
            <small>The item of the lowest price you purchased is:</small> 
            <p><strong><%= products[9][0].name %></strong></p>
          </div>
          <div class="col">
            <small>Today, you spent:</small>
            <p><strong>-<%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[2][0].total_price) %></strong></p>
          </div>
          <div class="col">
            <small>For the last 7 days, you spent:</small>
            <p><strong>-<%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[3][0].total_price) %></strong></p>
          </div>
        </div>
  </div>
  <h2>Sales</h2>
  <div class="container text-center mb-5">
      <div class="row">
          <div class="col">
            <small>Today's lowest price of 1 unit you sold</small>
            <p><strong><%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[4][0].min_price) %></strong></p>
            <small>The item of the lowest price you sold is:</small> 
            <p><strong><%= products[10][0].name %></strong></p>
          </div>
          <div class="col">
            <small>Today, you earned:</small>
            <p><strong>+<%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[5][0].total_price) %></strong></p>
          </div>
          <div class="col">
            <small>For the last 7 days, you earned:</small>
            <p><strong>+<%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[6][0].total_price) %></strong></p>
          </div>
        </div>
  </div>
  <h2 class="mb-5">Earnings & Expense</h2>
  <div class="container text-center">
      <div class="d-flex justify-content-around flex-fill mb-4">
          <div class="flex">
              <h4>Today</h4>
              <small>Earnings - Expense:</small>
              <p><strong><%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[5][0].total_price - products[2][0].total_price) %></strong></p>
          </div>
          <div class="flex">
              <h4>For the 7 days</h4>
              <small>you earned:</small>
              <p><strong><%= new Intl.NumberFormat('ko-KR', { style: "currency", currency: 'KRW'}).format(products[6][0].total_price - products[3][0].total_price) %></strong></p>
          </div>
        </div>  
  </div>
  <div class="d-flex flex-row">
    <div class="d-flex flex-row" style="width: 50%; height: 450px; padding-bottom: 50px;">
        <canvas id="expense_chart">
            <% const purchaseItems = products[7] %>
            <% const salesItems = products[8] %>
        </canvas>
    </div>
    <div class="d-flex flex-row" style="width: 50%; height: 450px; padding-bottom: 50px;">
      <canvas id="earnings_chart">

      </canvas>
  </div>
  </div>
  
</div>
<script>
    
    const purchase = <%- JSON.stringify(purchaseItems) %>;
    console.log("purchase", purchase);
    const sales = <%- JSON.stringify(salesItems) %>;
   console.log("sales", sales);
    let purchaseLabels = [], purchaseData = [], salesLabels = [], salesData = [];

    purchase.map(item => {
      purchaseLabels.push(item.created_at);
      purchaseData.push(item.total_price);
      console.log(purchaseLabels);
    });

    sales.map(item => {
      salesData.push(item.total_price);
      salesLabels.push(item.created_at);
    });

    console.log("purchaseLabels", purchaseLabels);
    console.log(purchaseData);
    console.log("salesLabels", salesLabels);
    console.log(salesData);

    console.log(Math.max.apply(null, purchaseData.concat(salesData)) / 10 );

  
    const ctx = document.getElementById('expense_chart');
        const expenseChart = new Chart(ctx, {
            type: 'horizontalBar',
            data: {
                labels: purchaseLabels,
                datasets: [
                  {
                      label: 'Expense',
                      data: purchaseData,
                      backgroundColor:'#E95A79',
                      fill : false,             
                  },
                ]
            },
            options: {
              responsive:true,
              maintainAspectRatio: false,
                scales: {
                    xAxes:[{
                      ticks: {
                        beginAtZero : true,
                        stepSize: Math.max.apply(null, purchaseData) / 10 // just in case when a big price can come out: maximum 10 ticks for the chart
                    }
                    }],
                    yAxes: [{ /* In hortizontal bar type, I need to set styles of bar in yAxes*/
                        barPercentage: 0.3,
                        barThickness: 50,
                    }]
                }
            }
        });



        const ctx2 = document.getElementById('earnings_chart');
        const earningsChart = new Chart(ctx2, {
            type: 'horizontalBar',
            data: {
                labels: salesLabels,
                datasets: [
                {
                  label: 'Earnings',
                  data: salesData,
                  backgroundColor: '#007BFF',
                  fill: false,
                }
              ]
              },
              options: {
                responsive:true,
                maintainAspectRatio: false,
                  scales: {
                      xAxes:[{
                        ticks: {
                          beginAtZero : true,
                          stepSize: Math.max.apply(null, salesData) / 10, 
                        }
                      }],
                      yAxes: [{
                        barPercentage: 0.3,
                        barThickness: 50
                      }]
                  }
              }
          });
  </script>

<% include ./partials/footer %>
